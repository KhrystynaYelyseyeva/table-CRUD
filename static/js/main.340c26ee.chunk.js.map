{"version":3,"sources":["constants.js","actions/users.js","reducers/users.js","reducers/index.js","components/UserForm/UserForm.js","components/UserModal/UserModal.js","components/DeleteCell/DeleteCell.js","components/Table/columns.js","components/Table/Table.js","views/UsersTable/UsersTable.js","App.js","store/createStore.js","index.js"],"names":["ADD","EDIT","DELETE","usersActions","user","type","userID","newData","usersReducer","state","usersList","initialUsersList","action","map","id","filter","getUsers","users","reducer","combineReducers","useStyles","makeStyles","theme","paper","margin","marginTop","spacing","width","padding","breakpoints","up","button","background","palette","success","light","UserForm","handleClose","currentUserID","classes","dispatch","useDispatch","useSelector","preparedCurrentUser","currentUser","find","fullName","full_name","split","first_name","last_name","gender","language","credit_card","email","currentUserData","Paper","className","Typography","component","variant","align","initialValues","validate","values","errors","test","onSubmit","preparedValue","length","submitForm","Grid","container","direction","justify","alignItems","item","TextField","name","label","autoFocus","fullWidth","FormLabel","RadioGroup","FormControlLabel","value","control","Radio","FormControl","InputLabel","labelId","Select","inputProps","MenuItem","Button","onClick","display","UserModal","children","useState","open","setOpen","handleOpen","color","aria-label","IconButton","fontSize","Modal","onClose","DeleteCell","COLUMNS","Header","accessor","Cell","cell","table","minWidth","fontBold","fontWeight","TableComponent","props","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","TableContainer","Table","TableHead","headerGroup","TableRow","getHeaderGroupProps","headers","column","TableCell","getHeaderProps","render","TableBody","row","getRowProps","cells","getCellProps","UsersTable","preparedUsers","columns","useMemo","data","useTable","App","store","createStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.340c26ee.chunk.js","sourcesContent":["export const ADD = 'users/ADD';\r\nexport const EDIT = 'users/EDIT';\r\nexport const DELETE = 'users/DELETE';","import { ADD, DELETE, EDIT } from '../constants';\r\n\r\nexport const usersActions = {\r\n  add: user => ({\r\n    type: ADD,\r\n    user,\r\n  }),\r\n  edit: (userID, newData) => ({\r\n    type: EDIT,\r\n    userID,\r\n    newData,\r\n  }),\r\n  delete: userID => ({\r\n    type: DELETE,\r\n    userID,\r\n  }),\r\n};\r\n","import initialUsersList from '../api/MOCK_DATA (2).json';\r\nimport { ADD, DELETE, EDIT } from '../constants';\r\n\r\n\r\nconst usersReducer = (state = {usersList: initialUsersList}, action) => {\r\n  switch (action.type) {\r\n    case ADD:\r\n      return {\r\n        ...state,\r\n        usersList: [...state.usersList, action.user],\r\n      };\r\n    case EDIT:\r\n      return {\r\n        ...state,\r\n        usersList: state.usersList.map( user => {\r\n          if (user.id === action.userID) {\r\n            return {\r\n              ...action.newData,\r\n            };\r\n          }\r\n\r\n          return user;\r\n        }),\r\n      };\r\n    case DELETE:\r\n      return {\r\n        ...state,\r\n        usersList: state.usersList.filter(user => user.id !== action.userID),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default usersReducer;","import { combineReducers } from 'redux';\r\n\r\nimport users from \"./users\";\r\n\r\nexport const getUsers = state => state.users.usersList;\r\n\r\nconst reducer = combineReducers({\r\n  users,\r\n});\r\n\r\nexport default reducer;","import { Button, FormControl, FormControlLabel, FormLabel, Grid, InputLabel, MenuItem, Paper, Radio, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Field, Form, Formik } from 'formik';\r\nimport { RadioGroup, Select, TextField } from 'formik-material-ui';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { usersActions } from '../../actions/users';\r\nimport { getUsers } from '../../reducers';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    margin: 'auto',\r\n    marginTop: theme.spacing(2),\r\n    width: '100vw',\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(4),\r\n      width: '50vw',\r\n    },\r\n  },\r\n  button: {\r\n    background: theme.palette.success.light,\r\n  }\r\n}));\r\n\r\nexport const UserForm = ({ handleClose, type, currentUserID }) => {\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const users = useSelector(getUsers);\r\n\r\n  const preparedCurrentUser = {};\r\n\r\n  if (currentUserID) {\r\n    const currentUser = users\r\n      .find(user => user.id === currentUserID);\r\n    \r\n    const fullName = currentUser.full_name.split(' ');\r\n\r\n    preparedCurrentUser.first_name = fullName[0];\r\n    preparedCurrentUser.last_name = fullName[1];\r\n    preparedCurrentUser.gender = currentUser.gender;\r\n    preparedCurrentUser.language = currentUser.language;\r\n    preparedCurrentUser.credit_card = currentUser.credit_card;\r\n    preparedCurrentUser.email = currentUser.email;\r\n    preparedCurrentUser.id = currentUser.id;\r\n  }\r\n    \r\n  const currentUserData = currentUserID ?\r\n    preparedCurrentUser:\r\n  {\r\n    first_name: '',\r\n    last_name: '',\r\n    gender: 'Male',\r\n    language: '',\r\n    credit_card: '',\r\n    email:'',\r\n  }\r\n\r\n  const addUser = user => {\r\n    dispatch(usersActions.add(user));\r\n  };\r\n\r\n  const editUser = (userID, newData) => {\r\n    dispatch(usersActions.edit(userID, newData));\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <Typography component=\"h1\" variant=\"h5\" align=\"center\">\r\n        {type === 'add-user' && 'New user:'}\r\n        {type === 'edit-user' && 'Edit user:'}\r\n      </Typography>\r\n      <Formik\r\n        initialValues={currentUserData}\r\n\r\n        validate={values => {\r\n          const errors = {};\r\n\r\n          //first_name validation\r\n          if (!values.first_name) {\r\n            errors.first_name = 'Required';\r\n          } else if (!/^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$/.test(values.first_name)) {\r\n            errors.first_name = 'Invalid First name';\r\n          }\r\n\r\n          //last_name validation\r\n          if (!values.last_name) {\r\n            errors.last_name = 'Required';\r\n          } else if (!/^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$/.test(values.last_name)) {\r\n            errors.last_name = 'Invalid Last name';\r\n          }\r\n\r\n          //language validation\r\n          if (!values.language) {\r\n            errors.language = 'Required';\r\n          }\r\n\r\n          //email validation\r\n          if (!values.email) {\r\n            errors.email = 'Required';\r\n          } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n            errors.email = 'Invalid email address';\r\n          }\r\n\r\n          //credit_card validation\r\n          if (!values.credit_card) {\r\n            errors.credit_card = 'Required';\r\n          //} else if (\r\n           // !/ ^4[0-9]{12}(?:[0-9]{3})?$ /.test(values.credit_card) //Visa\r\n          //  || !/^3[47][0-9]{13}$/.test(values.credit_card) //American Express\r\n          //  || !/^(?:5[1-5][0-9]{2}|222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}$/.test(values.credit_card) //MasterCard\r\n          //) {\r\n          //  errors.credit_card = 'Invalid credit card number';\r\n          }\r\n\r\n          return errors;\r\n        }}\r\n\r\n        onSubmit={(values) => {\r\n          const preparedValue = {\r\n            full_name: `${values.first_name} ${values.last_name}`,\r\n            gender: values.gender,\r\n            language: values.language,\r\n            credit_card: values.credit_card,\r\n            email: values.email,\r\n            id: users.length + 1,\r\n          }\r\n\r\n          switch (type) {\r\n            case 'add-user':\r\n              addUser(preparedValue);\r\n              break;\r\n            case 'edit-user':\r\n              editUser(currentUserID, preparedValue);\r\n              break;\r\n            default:\r\n              return;\r\n          }\r\n          \r\n          handleClose();\r\n        }}\r\n      >\r\n        {({ submitForm }) => (\r\n          <Form>\r\n            <Grid\r\n              container\r\n              direction=\"column\"\r\n              justify=\"center\"\r\n              alignItems=\"stretch\"\r\n              spacing={3}\r\n            >\r\n              <Grid item>\r\n                <Field\r\n                  component={TextField}\r\n                  name=\"first_name\"\r\n                  type=\"text\"\r\n                  label=\"First name\"\r\n                  autoFocus\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <Field\r\n                  component={TextField}\r\n                  name=\"last_name\"\r\n                  type=\"text\"\r\n                  label=\"Last name\"\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <FormLabel component=\"legend\">Gender</FormLabel>\r\n                <Field component={RadioGroup} name=\"gender\">\r\n                  <FormControlLabel\r\n                    value=\"Male\"\r\n                    control={<Radio/>}\r\n                    label=\"Male\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"Female\"\r\n                    control={<Radio/>}\r\n                    label=\"Female\"\r\n                  />\r\n                </Field>\r\n              </Grid>\r\n              <Grid item>\r\n                <FormControl fullWidth>\r\n                  <InputLabel id=\"language-label\">Language</InputLabel>\r\n                  <Field\r\n                    labelId=\"language-label\"\r\n                    component={Select}\r\n                    name=\"language\"\r\n                    inputProps={{\r\n                      id: 'language',\r\n                    }}\r\n                  >\r\n                    <MenuItem value=\"English\">English</MenuItem>\r\n                    <MenuItem value=\"Ukraine\">Ukraine</MenuItem>\r\n                  </Field>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item>\r\n                <Field\r\n                  component={TextField}\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  label=\"Email\"\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <Field\r\n                  component={TextField}\r\n                  name=\"credit_card\"\r\n                  type=\"number\"\r\n                  label=\"Credit card number\"\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item container justify=\"flex-end\">\r\n                <Button\r\n                  variant=\"contained\"\r\n                  className={classes.button}\r\n                  onClick={submitForm}\r\n                >\r\n                  {type === 'add-user' && 'Add to users'}\r\n                  {type === 'edit-user' && 'Save'}\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Paper>\r\n  )\r\n}\r\n","import { IconButton } from '@material-ui/core';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport React, { useState } from 'react';\r\n\r\nconst useStyles = makeStyles({\r\n  button: {\r\n    display: 'block',\r\n    margin: '5vh auto 5vh',\r\n  },\r\n});\r\n\r\nconst UserModal = ({ children, type }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {type === 'add-user' && (\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.button}\r\n          onClick={handleOpen}\r\n          aria-label=\"add-user\"\r\n        >\r\n          Add user\r\n        </Button>\r\n      )}\r\n      {type === 'edit-user' && (\r\n        <IconButton\r\n          aria-label=\"edit-user\"\r\n          onClick={handleOpen}\r\n        >\r\n          <EditIcon fontSize=\"small\" />\r\n        </IconButton>\r\n      )}\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        {children({handleClose, type})}\r\n        {/* {React.cloneElement(props.children, { handleClose: handleClose })} */}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserModal;","import IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { usersActions } from '../../actions/users';\r\n\r\nexport const DeleteCell = ({ userID }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleDelete = ID => {\r\n    dispatch(usersActions.delete(ID));\r\n  }\r\n\r\n  return (\r\n    <IconButton aria-label=\"delete\" onClick={() => handleDelete(userID)}>\r\n      <DeleteIcon fontSize=\"small\"/>\r\n    </IconButton>\r\n  )\r\n}","import { UserForm } from \"../../components/UserForm/UserForm\";\nimport Modal from '../../components/UserModal/UserModal';\nimport { DeleteCell } from '../DeleteCell/DeleteCell';\n\nexport const COLUMNS = [\n  {\n    Header: 'Edit user',\n    accessor: 'userID',\n      Cell: ({ cell }) => {\n        return (\n          <Modal type=\"edit-user\">\n            {({ handleClose, type }) => (\n              <UserForm handleClose={handleClose} type={type} currentUserID={cell.value}/>\n            )}\n          </Modal>\n        )\n      }\n  },\n  {\n    Header: 'Full Name',\n    accessor: 'full_name',\n  },\n  {\n    Header: 'Gender',\n    accessor: 'gender',\n  },\n  {\n    Header: 'Language',\n    accessor: 'language',\n  },\n  {\n    Header: 'Email',\n    accessor: 'email',\n  },\n  {\n    Header: 'Credit card',\n    accessor: 'credit_card',\n  },\n  {\n    Header: 'Delete user',\n    accessor: 'id',\n    Cell: ({ cell }) => {\n      return <DeleteCell userID={cell.value}/>\n    }\n  }\n]\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  fontBold: {\r\n    fontWeight: 'bold',\r\n  }\r\n});\r\n\r\nexport const TableComponent = props => {\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table\r\n        {...getTableProps()}\r\n        className={classes.table}\r\n        aria-label=\"users table\"\r\n      >\r\n        <TableHead>\r\n          {headerGroups.map(headerGroup => (\r\n            <TableRow {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <TableCell {...column.getHeaderProps()} className={classes.fontBold}>\r\n                  {column.render('Header')}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          ))}\r\n        </TableHead>\r\n        <TableBody {...getTableBodyProps()}>\r\n          {rows.map(row => {\r\n            prepareRow(row)\r\n            return (\r\n              <TableRow key={row.name} {...row.getRowProps()}>\r\n                {row.cells.map(cell => (\r\n                  <TableCell {...cell.getCellProps()}>\r\n                    {cell.render('Cell')}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            )\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React, { useMemo } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useTable } from 'react-table';\r\nimport { COLUMNS } from '../../components/Table/columns';\r\nimport { TableComponent as Table } from \"../../components/Table/Table\";\r\nimport { UserForm } from \"../../components/UserForm/UserForm\";\r\nimport Modal from '../../components/UserModal/UserModal';\r\nimport { getUsers } from '../../reducers';\r\n\r\nexport const UsersTable = () => {\r\n  const users = useSelector(getUsers);\r\n  \r\n  const preparedUsers = users.map(user => ({\r\n    ...user,\r\n    userID: user.id,\r\n  }));\r\n  \r\n  const columns = useMemo(() => COLUMNS, [])\r\n  const data = useMemo(() => preparedUsers, [preparedUsers])\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow\r\n  } = useTable({\r\n    columns,\r\n    data\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <Modal type=\"add-user\">\r\n        {({ handleClose, type }) => (\r\n          <UserForm handleClose={handleClose} type={type}/>\r\n        )}\r\n      </Modal>\r\n      <Table\r\n        getTableProps={getTableProps}\r\n        getTableBodyProps={getTableBodyProps}\r\n        headerGroups={headerGroups}\r\n        rows={rows}\r\n        prepareRow={prepareRow}\r\n      />\r\n    </>\r\n  )\r\n}","import { UsersTable } from './views/UsersTable/UsersTable';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <UsersTable />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createStore } from 'redux';\r\nimport reducer from '../reducers';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport { Provider } from 'react-redux'\r\nimport store from './store/createStore'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}