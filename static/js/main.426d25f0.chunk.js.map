{"version":3,"sources":["components/Snackbar/Snackbar.js","constants.js","actions/users.js","reducers/users.js","reducers/index.js","components/UserForm/UserForm.js","components/UserModal/UserModal.js","components/Dialog/Dialog.js","components/DeleteCell/DeleteCell.js","components/Table/columns.js","components/Table/Table.js","views/UsersTable/UsersTable.js","App.js","store/createStore.js","index.js"],"names":["Alert","props","elevation","variant","MySnackbar","openSnackbar","handleCloseSnackbar","Snackbar","open","autoHideDuration","onClose","severity","ADD","EDIT","DELETE","usersActions","user","type","userID","newData","usersReducer","state","usersList","initialUsersList","action","map","id","filter","getUsers","users","reducer","combineReducers","useStyles","makeStyles","theme","paper","margin","marginTop","spacing","width","padding","breakpoints","up","button","background","palette","success","light","UserForm","handleClose","currentUserID","handleOpenSnackbar","classes","dispatch","useDispatch","useSelector","preparedCurrentUser","currentUser","find","fullName","full_name","split","first_name","last_name","gender","language","credit_card","email","currentUserData","Paper","className","Typography","component","align","initialValues","validate","values","errors","test","onSubmit","preparedValue","length","submitForm","Grid","container","direction","justify","alignItems","item","TextField","name","label","autoFocus","fullWidth","FormLabel","RadioGroup","FormControlLabel","value","control","Radio","FormControl","InputLabel","labelId","Select","inputProps","MenuItem","Button","onClick","display","UserModal","children","useState","setOpen","handleOpen","color","aria-label","IconButton","fontSize","Modal","ResponsiveDialog","openDialog","handleCloseDialog","useTheme","fullScreen","useMediaQuery","down","Dialog","aria-labelledby","DialogTitle","DialogActions","DeleteCell","setOpenDialog","COLUMNS","Header","Cell","row","original","accessor","table","minWidth","fontBold","fontWeight","TableComponent","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","TableContainer","Table","TableHead","headerGroup","TableRow","getHeaderGroupProps","headers","column","TableCell","getHeaderProps","render","TableBody","getRowProps","cells","cell","getCellProps","UsersTable","setOpenSnackbar","columns","useMemo","data","useTable","App","store","createStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.426d25f0.chunk.js","sourcesContent":["import Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport React from \"react\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={3} variant=\"filled\" {...props} />;\n}\n\nconst MySnackbar = ({ openSnackbar, handleCloseSnackbar }) => {\n  return (\n    <Snackbar\n      open={openSnackbar}\n      autoHideDuration={3000}\n      onClose={handleCloseSnackbar}\n    >\n      <Alert onClose={handleCloseSnackbar} severity=\"success\">\n        \"Success!\"\n      </Alert>\n    </Snackbar>\n  );\n};\n\nexport default MySnackbar;\n","export const ADD = \"users/ADD\";\nexport const EDIT = \"users/EDIT\";\nexport const DELETE = \"users/DELETE\";\n","import { ADD, DELETE, EDIT } from \"../constants\";\n\nexport const usersActions = {\n  add: (user) => ({\n    type: ADD,\n    user,\n  }),\n  edit: (userID, newData) => ({\n    type: EDIT,\n    userID,\n    newData,\n  }),\n  delete: (userID) => ({\n    type: DELETE,\n    userID,\n  }),\n};\n","import initialUsersList from '../api/MOCK_DATA (2).json';\r\nimport { ADD, DELETE, EDIT } from '../constants';\r\n\r\n\r\nconst usersReducer = (state = {usersList: initialUsersList}, action) => {\r\n  switch (action.type) {\r\n    case ADD:\r\n      return {\r\n        ...state,\r\n        usersList: [...state.usersList, action.user],\r\n      };\r\n    case EDIT:\r\n      return {\r\n        ...state,\r\n        usersList: state.usersList.map( user => {\r\n          if (user.id === action.userID) {\r\n            return {\r\n              ...action.newData,\r\n            };\r\n          }\r\n\r\n          return user;\r\n        }),\r\n      };\r\n    case DELETE:\r\n      return {\r\n        ...state,\r\n        usersList: state.usersList.filter(user => user.id !== action.userID),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default usersReducer;","import { combineReducers } from \"redux\";\nimport users from \"./users\";\n\nexport const getUsers = (state) => state.users.usersList;\n\nconst reducer = combineReducers({\n  users,\n});\n\nexport default reducer;\n","import {\n  Button,\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Paper,\n  Radio,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Field, Form, Formik } from \"formik\";\nimport { RadioGroup, Select, TextField } from \"formik-material-ui\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { usersActions } from \"../../actions/users\";\nimport { getUsers } from \"../../reducers\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    margin: \"auto\",\n    marginTop: theme.spacing(2),\n    width: \"100vw\",\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(4),\n      width: \"50vw\",\n    },\n  },\n  button: {\n    background: theme.palette.success.light,\n  },\n}));\n\nexport const UserForm = ({\n  handleClose,\n  type,\n  currentUserID,\n  handleOpenSnackbar,\n}) => {\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  const users = useSelector(getUsers);\n\n  const preparedCurrentUser = {};\n\n  if (currentUserID) {\n    const currentUser = users.find((user) => user.id === currentUserID);\n\n    const fullName = currentUser.full_name.split(\" \");\n\n    preparedCurrentUser.first_name = fullName[0];\n    preparedCurrentUser.last_name = fullName[1];\n    preparedCurrentUser.gender = currentUser.gender;\n    preparedCurrentUser.language = currentUser.language;\n    preparedCurrentUser.credit_card = currentUser.credit_card;\n    preparedCurrentUser.email = currentUser.email;\n    preparedCurrentUser.id = currentUser.id;\n  }\n\n  const currentUserData = currentUserID\n    ? preparedCurrentUser\n    : {\n        first_name: \"\",\n        last_name: \"\",\n        gender: \"Male\",\n        language: \"\",\n        credit_card: \"\",\n        email: \"\",\n      };\n\n  const addUser = (user) => {\n    dispatch(usersActions.add(user));\n  };\n\n  const editUser = (userID, newData) => {\n    dispatch(usersActions.edit(userID, newData));\n  };\n\n  return (\n    <Paper className={classes.paper}>\n      <Typography component=\"h1\" variant=\"h5\" align=\"center\">\n        {type === \"add-user\" && \"New user:\"}\n        {type === \"edit-user\" && \"Edit user:\"}\n      </Typography>\n      <Formik\n        initialValues={currentUserData}\n        validate={(values) => {\n          const errors = {};\n\n          //first_name validation\n          if (!values.first_name) {\n            errors.first_name = \"Required\";\n          } else if (\n            !/^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$/.test(\n              values.first_name\n            )\n          ) {\n            errors.first_name = \"Invalid First name\";\n          }\n\n          //last_name validation\n          if (!values.last_name) {\n            errors.last_name = \"Required\";\n          } else if (\n            !/^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$/.test(values.last_name)\n          ) {\n            errors.last_name = \"Invalid Last name\";\n          }\n\n          //language validation\n          if (!values.language) {\n            errors.language = \"Required\";\n          }\n\n          //email validation\n          if (!values.email) {\n            errors.email = \"Required\";\n          } else if (\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\n          ) {\n            errors.email = \"Invalid email address\";\n          }\n\n          //credit_card validation\n          if (!values.credit_card) {\n            errors.credit_card = \"Required\";\n            //} else if (\n            // !/ ^4[0-9]{12}(?:[0-9]{3})?$ /.test(values.credit_card) //Visa\n            //  || !/^3[47][0-9]{13}$/.test(values.credit_card) //American Express\n            //  || !/^(?:5[1-5][0-9]{2}|222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}$/.test(values.credit_card) //MasterCard\n            //) {\n            //  errors.credit_card = 'Invalid credit card number';\n          }\n\n          return errors;\n        }}\n        onSubmit={(values) => {\n          const preparedValue = {\n            full_name: `${values.first_name} ${values.last_name}`,\n            gender: values.gender,\n            language: values.language,\n            credit_card: values.credit_card,\n            email: values.email,\n            id: users.length + 1,\n          };\n\n          switch (type) {\n            case \"add-user\":\n              addUser(preparedValue);\n              break;\n            case \"edit-user\":\n              editUser(currentUserID, preparedValue);\n              break;\n            default:\n              return;\n          }\n\n          handleClose();\n          handleOpenSnackbar();\n        }}\n      >\n        {({ submitForm }) => (\n          <Form>\n            <Grid\n              container\n              direction=\"column\"\n              justify=\"center\"\n              alignItems=\"stretch\"\n              spacing={3}\n            >\n              <Grid item>\n                <Field\n                  component={TextField}\n                  name=\"first_name\"\n                  type=\"text\"\n                  label=\"First name\"\n                  autoFocus\n                  fullWidth\n                />\n              </Grid>\n              <Grid item>\n                <Field\n                  component={TextField}\n                  name=\"last_name\"\n                  type=\"text\"\n                  label=\"Last name\"\n                  fullWidth\n                />\n              </Grid>\n              <Grid item>\n                <FormLabel component=\"legend\">Gender</FormLabel>\n                <Field component={RadioGroup} name=\"gender\">\n                  <FormControlLabel\n                    value=\"Male\"\n                    control={<Radio />}\n                    label=\"Male\"\n                  />\n                  <FormControlLabel\n                    value=\"Female\"\n                    control={<Radio />}\n                    label=\"Female\"\n                  />\n                </Field>\n              </Grid>\n              <Grid item>\n                <FormControl fullWidth>\n                  <InputLabel id=\"language-label\">Language</InputLabel>\n                  <Field\n                    labelId=\"language-label\"\n                    component={Select}\n                    name=\"language\"\n                    inputProps={{\n                      id: \"language\",\n                    }}\n                  >\n                    <MenuItem value=\"English\">English</MenuItem>\n                    <MenuItem value=\"Ukraine\">Ukraine</MenuItem>\n                  </Field>\n                </FormControl>\n              </Grid>\n              <Grid item>\n                <Field\n                  component={TextField}\n                  name=\"email\"\n                  type=\"email\"\n                  label=\"Email\"\n                  fullWidth\n                />\n              </Grid>\n              <Grid item>\n                <Field\n                  component={TextField}\n                  name=\"credit_card\"\n                  type=\"number\"\n                  label=\"Credit card number\"\n                  fullWidth\n                />\n              </Grid>\n              <Grid item container justify=\"flex-end\">\n                <Button\n                  variant=\"contained\"\n                  className={classes.button}\n                  onClick={submitForm}\n                >\n                  {type === \"add-user\" && \"Add to users\"}\n                  {type === \"edit-user\" && \"Save\"}\n                </Button>\n              </Grid>\n            </Grid>\n          </Form>\n        )}\n      </Formik>\n    </Paper>\n  );\n};\n","import { IconButton } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport React, { useState } from \"react\";\n\nconst useStyles = makeStyles({\n  button: {\n    display: \"block\",\n    margin: \"5vh auto 5vh\",\n  },\n});\n\nconst UserModal = ({ children, type }) => {\n  const [open, setOpen] = useState(false);\n  const classes = useStyles();\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      {type === \"add-user\" && (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n          onClick={handleOpen}\n          aria-label=\"add-user\"\n        >\n          Add user\n        </Button>\n      )}\n      {type === \"edit-user\" && (\n        <IconButton aria-label=\"edit-user\" onClick={handleOpen}>\n          <EditIcon fontSize=\"small\" />\n        </IconButton>\n      )}\n      <Modal open={open} onClose={handleClose}>\n        {children({ handleClose, type })}\n        {/* {React.cloneElement(props.children, { handleClose: handleClose })} */}\n      </Modal>\n    </div>\n  );\n};\n\nexport default UserModal;\n","import Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { usersActions } from \"../../actions/users\";\n\nconst ResponsiveDialog = ({ openDialog, handleCloseDialog, userID }) => {\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const dispatch = useDispatch();\n\n  const handleDelete = (ID) => {\n    dispatch(usersActions.delete(ID));\n  };\n\n  return (\n    <div>\n      <Dialog\n        fullScreen={fullScreen}\n        open={openDialog}\n        onClose={handleCloseDialog}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">\n          Do you want to delete this user?\n        </DialogTitle>\n        <DialogActions>\n          <Button autoFocus onClick={handleCloseDialog} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            onClick={() => {\n              handleDelete(userID);\n              handleCloseDialog();\n            }}\n            color=\"primary\"\n          >\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default ResponsiveDialog;\n","import IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport React, { useState } from \"react\";\nimport Dialog from \"../Dialog/Dialog\";\n\nexport const DeleteCell = ({ userID }) => {\n  const [openDialog, setOpenDialog] = useState(false);\n\n  const handleOpenDialog = () => {\n    setOpenDialog(true);\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n\n  return (\n    <>\n      <Dialog\n        openDialog={openDialog}\n        handleCloseDialog={handleCloseDialog}\n        userID={userID}\n      />\n      <IconButton aria-label=\"delete\" onClick={handleOpenDialog}>\n        <DeleteIcon fontSize=\"small\" />\n      </IconButton>\n    </>\n  );\n};\n","import { UserForm } from \"../../components/UserForm/UserForm\";\nimport Modal from \"../../components/UserModal/UserModal\";\nimport { DeleteCell } from \"../DeleteCell/DeleteCell\";\n\nexport const COLUMNS = [\n  {\n    Header: \"Edit user\",\n    id: \"edit\",\n    Cell: ({ handleOpenSnackbar, row }) => {\n      return (\n        <Modal type=\"edit-user\">\n          {({ handleClose, type }) => (\n            <UserForm\n              handleClose={handleClose}\n              type={type}\n              currentUserID={row.original.id}\n              handleOpenSnackbar={handleOpenSnackbar}\n            />\n          )}\n        </Modal>\n      );\n    },\n  },\n  {\n    Header: \"Full Name\",\n    accessor: \"full_name\",\n  },\n  {\n    Header: \"Gender\",\n    accessor: \"gender\",\n  },\n  {\n    Header: \"Language\",\n    accessor: \"language\",\n  },\n  {\n    Header: \"Email\",\n    accessor: \"email\",\n  },\n  {\n    Header: \"Credit card\",\n    accessor: \"credit_card\",\n  },\n  {\n    Header: \"Delete user\",\n    id: \"delete\",\n    Cell: ({ row: { original } }) => {\n      return <DeleteCell userID={original.id} />;\n    },\n  },\n];\n","import Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport React from \"react\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  fontBold: {\n    fontWeight: \"bold\",\n  },\n});\n\nexport const TableComponent = (props) => {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    handleOpenSnackbar,\n  } = props;\n\n  const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table\n        {...getTableProps()}\n        className={classes.table}\n        aria-label=\"users table\"\n      >\n        <TableHead>\n          {headerGroups.map((headerGroup) => (\n            <TableRow {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <TableCell\n                  {...column.getHeaderProps()}\n                  className={classes.fontBold}\n                >\n                  {column.render(\"Header\")}\n                </TableCell>\n              ))}\n            </TableRow>\n          ))}\n        </TableHead>\n        <TableBody {...getTableBodyProps()}>\n          {rows.map((row) => {\n            prepareRow(row);\n            return (\n              <TableRow key={row.name} {...row.getRowProps()}>\n                {row.cells.map((cell) => (\n                  <TableCell {...cell.getCellProps()}>\n                    {cell.render(\"Cell\", {\n                      handleOpenSnackbar,\n                    })}\n                  </TableCell>\n                ))}\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n","import React, { useMemo, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useTable } from \"react-table\";\nimport Snackbar from \"../../components/Snackbar/Snackbar\";\nimport { COLUMNS } from \"../../components/Table/columns\";\nimport { TableComponent as Table } from \"../../components/Table/Table\";\nimport { UserForm } from \"../../components/UserForm/UserForm\";\nimport Modal from \"../../components/UserModal/UserModal\";\nimport { getUsers } from \"../../reducers\";\n\nexport const UsersTable = () => {\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n\n  const handleOpenSnackbar = () => {\n    setOpenSnackbar(true);\n  };\n\n  const handleCloseSnackbar = () => {\n    setOpenSnackbar(false);\n  };\n\n  const users = useSelector(getUsers);\n\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => users, [users]);\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({\n    columns,\n    data,\n  });\n\n  return (\n    <>\n      <Modal type=\"add-user\">\n        {({ handleClose, type }) => (\n          <UserForm\n            handleClose={handleClose}\n            type={type}\n            handleOpenSnackbar={handleOpenSnackbar}\n          />\n        )}\n      </Modal>\n      {openSnackbar && (\n        <Snackbar\n          openSnackbar={openSnackbar}\n          handleCloseSnackbar={handleCloseSnackbar}\n        />\n      )}\n      <Table\n        getTableProps={getTableProps}\n        getTableBodyProps={getTableBodyProps}\n        headerGroups={headerGroups}\n        rows={rows}\n        prepareRow={prepareRow}\n        handleOpenSnackbar={handleOpenSnackbar}\n      />\n    </>\n  );\n};\n","import { UsersTable } from \"./views/UsersTable/UsersTable\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <UsersTable />\n    </div>\n  );\n}\n\nexport default App;\n","import { createStore } from \"redux\";\nimport reducer from \"../reducers\";\n\nconst store = createStore(reducer);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport store from \"./store/createStore\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}